#Create a local Git Repository

git init //inside the folder we want to make as Local Git Repository

#Attach local repositor remote

git remote add origin https://github.com/USERNAME/REPONAME.git 

#Verify remote repository

git remote -v

#Create branch through Local Repo

git branch {branch-name}

#Create branch & switch to That branch

git checkout -b {branch-name}

#Add the changes 

git add .(or){file/folder-name}

#Commit the changes(after add/change we need to commit the changes)

git commit -m "Message"

#Push the changes to remote Branch

git push origin {branch-name}

#If any changes made in the remote repository push will fail. Inorder to resolve use this commit-which will pull all the things in remote by avoiding changes

 git pull origin {current-branch-name} --allow-unrelated-histories

#Check the status of current branch

 git status

#After all the changes send files to remote

 git push origin {branch-name/master}

#To check the log of commits

git log

#To get log in oneline

git log --oneline

#To stash(stash means we are holding the commit to do it later, we decided to change the current added file)

 git stash

#To go back that stashed file

 git stash pop

#Revert a commit(undo or go back to previous commit)

 git revert <sha1>|Previous commit id
 git push 

# Merge to a branch
  git checkout branchName(destination)
  git merge branchName(source)
 -->GUI-setup pull request

#Reset to any commit(soft)
 git reset sha1/commitid

#Reset to any commit & delete history of previous commit(hard)\
 git reset --hard sha1/commitid

#Show tree progression of log

 git log --all --decorate --oneline --graph

======================================
Pending portions


Reset types
Git Rebase
Git Flow
SourceTree/Alternatives





